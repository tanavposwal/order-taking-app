generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Restro {
  id        String  @id @default(uuid())
  name      String
  logo      String?
  location  String?
  managerId String  @unique
  manager   User    @relation(fields: [managerId], references: [id])
  menu      Dish[]
  tables    Table[]
}

model Table {
  id String @id @default(uuid())

  menu Dish[]

  Restro   Restro? @relation(fields: [restroId], references: [id])
  restroId String?
}

model Dish {
  id       String  @id @default(uuid())
  name     String
  image    String
  price    Int
  restroId String
  Restro   Restro  @relation(fields: [restroId], references: [id])
  Table    Table?  @relation(fields: [tableId], references: [id])
  tableId  String?
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  restro        Restro?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}
